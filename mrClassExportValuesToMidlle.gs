
class MrClassExportProject {
  /** @param {MrContext} context*/
  constructor(context, item) { // class constructor
    if (!context) { throw new Error("context"); }
    /** @private  */
    this.context = context;
    /** @private  */
    this.item = item;
    /** @private  */
    this.sobachkaMap = undefined;
    this.sheetName_–ü—Ä–æ–µ–∫—Ç—ã = "–ü—Ä–æ–µ–∫—Ç—ã";
    this.sheetName_–°–≤–æ–¥–Ω–∞—è = "–°–≤–æ–¥–Ω–∞—è";
  }


  getContext–¢–∞–±–ª–∏—Ü–∞–û–ø–ª–∞—Ç–í–Ω–µ—à–Ω—è—è() {
    if (!this.context–¢–∞–±–ª–∏—Ü–∞–û–ø–ª–∞—Ç–í–Ω–µ—à–Ω—è—è) {
      let urlExternalSpreadSheet = this.context.getSheetPay().getUrlExternalSpreadSheet();
      // Logger.log(` getContext–¢–∞–±–ª–∏—Ü–∞–û–ø–ª–∞—Ç–í–Ω–µ—à–Ω—è—è urlExternalSpreadSheet =${urlExternalSpreadSheet}`);
      if (urlExternalSpreadSheet) {
        // Logger.log(` getContext–¢–∞–±–ª–∏—Ü–∞–û–ø–ª–∞—Ç–í–Ω–µ—à–Ω—è—è urlExternalSpreadSheet  =${urlExternalSpreadSheet}`);
        let MrContextConstructor = MrLib_Midlle.getMrContextConstructor();
        // this.context–¢–∞–±–ª–∏—Ü–∞–û–ø–ª–∞—Ç–í–Ω–µ—à–Ω—è—è = MrLib_Midlle.getMrContextConstructor()(urlExternalSpreadSheet, MrLib_Midlle.getSettings());
        this.context–¢–∞–±–ª–∏—Ü–∞–û–ø–ª–∞—Ç–í–Ω–µ—à–Ω—è—è = new MrContextConstructor(urlExternalSpreadSheet, MrLib_Midlle.getSettings());
        // Logger.log(`  this.context–¢–∞–±–ª–∏—Ü–∞–û–ø–ª–∞—Ç–í–Ω–µ—à–Ω—è—è =${this.context–¢–∞–±–ª–∏—Ü–∞–û–ø–ª–∞—Ç–í–Ω–µ—à–Ω—è—è}`);
      }
    }
    // Logger.log(`  this.context–¢–∞–±–ª–∏—Ü–∞–û–ø–ª–∞—Ç–í–Ω–µ—à–Ω—è—è =${this.context–¢–∞–±–ª–∏—Ü–∞–û–ø–ª–∞—Ç–í–Ω–µ—à–Ω—è—è}`);
    return this.context–¢–∞–±–ª–∏—Ü–∞–û–ø–ª–∞—Ç–í–Ω–µ—à–Ω—è—è;
  }

  getProjectNumber(url) {
    let retProjectNumber = undefined;
    let sheetModel–°–≤–æ–¥–Ω–∞—è = MrLib_Midlle.getSheetModelBySheetName(this.sheetName_–°–≤–æ–¥–Ω–∞—è);
    if (sheetModel–°–≤–æ–¥–Ω–∞—è) {
      let map–°–≤–æ–¥–Ω–∞—è = sheetModel–°–≤–æ–¥–Ω–∞—è.getMap();
      map–°–≤–æ–¥–Ω–∞—è.forEach(v => {
        if (url != v.–¢–∞–±–ª–∏—Ü–∞) { return; }
        if (retProjectNumber) { return; }
        retProjectNumber = v.key;
      });

    }
    return retProjectNumber;
  }


  triggerExportValuesToMidlle() {

    // return
    if (getContext().timeConstruct.getMinutes() % 30 > 5) { return; }
    Logger.log(`triggerExportValuesToMidlle`);
    try {
      let exportValues = this.getExportValues();

      let projectNumber = this.getProjectNumber(exportValues.key);
      // exportValues.key = projectNumber;
      exportValues.–¢–±_date = getContext().timeConstruct;

      let –§–∞–π–ª–ü—Ä–æ–µ–∫—Ç–∞ = (() => {
        try { return MrLib_Midlle.getItemByKey(MrLib_Midlle.getSettings().sheetNames.–§–∞–π–ª—ã, `${projectNumber}`, "–§–∞–π–ª–ü—Ä–æ–µ–∫—Ç–∞", undefined); }
        catch (err) { mrErrToString(err); return undefined; }
      })();

      if (–§–∞–π–ª–ü—Ä–æ–µ–∫—Ç–∞) {
        let obj = MrLib_Midlle.getNewFileObjData();
        obj.value = exportValues;
        obj.–¢–∞–±–ª–∏—Ü–∞–ü—Ä–æ–µ–∫—Ç–∞ = exportValues.key;
        obj.–ù–æ–º–µ—Ä–ü—Ä–æ–µ–∫—Ç–∞ = `${projectNumber}`;
        obj.–§–∞–π–ª–ü—Ä–æ–µ–∫—Ç–∞ = –§–∞–π–ª–ü—Ä–æ–µ–∫—Ç–∞;
        obj.key = `${projectNumber}`;
        obj.info = "update " + obj.key;
        MrLib_Midlle.getMrClassFile().update(obj);
      } else {
        Logger.log(`triggerExportValuesToMidlle –ù–µ—Ç –§–∞–π–ª–∞ `);
      }

      // if (JSON.stringify(exportValues.–¢–±).length < 50000) {
      MrLib_Midlle.updateItems(this.sheetName_–ü—Ä–æ–µ–∫—Ç—ã, [exportValues]);
      exportValues.key = projectNumber;
      MrLib_Midlle.updateItems(this.sheetName_–°–≤–æ–¥–Ω–∞—è, [exportValues]);
      // }

    } catch (err) { mrErrToString(err); }
  }


  /** @private  */
  findRowBodyLast(sheetName) {
    // Logger.log(JSON.stringify(sheetName));

    let ret = getContext().getRowSobachkaBySheetName(sheetName)
    // let ret = this.getRowSobachkaBySheetName(sheetName);
    if (!ret) { ret = this.context.getSheetByName(sheetName).getLastRow(); }
    else { ret = ret - 1; }
    return ret;
  }


  /** @private  */
  getValuesFrom–í—ã–±–æ—Ä_–ü–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤(item) {

    let map–°–≤–æ–¥–Ω–∞—è = new Map();
    this.getValuesFrom–°–≤–æ–¥–Ω–∞—è–ü–æ–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–µ().forEach(item => {
      let key = item["‚Ññ"];
      if (!key) { return; }
      map–°–≤–æ–¥–Ω–∞—è.set(key, item);
    });


    let rowBodyFirst = 2;
    let retArr = new Array();
    let sheet = this.context.getSheetByName(this.context.settings.sheetName_–õ–∏—Å—Ç_7);
    let heads = sheet.getRange(1, 1, 1, sheet.getLastColumn()).getValues()[0];

    heads = ["row"].concat(heads).map(h => `${h}`.trim());
    let vls = sheet.getRange(rowBodyFirst, 1, item.–¢–±.countProd, sheet.getLastColumn()).getValues();
    vls = vls.map((v, i, arr) => { return [i + rowBodyFirst].concat(v) });
    let col_name = nr("B");
    let col_list = ["‚Ññ", "–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞", "–ï–¥", "–ö–æ–ª", "–¶–µ–Ω–∞", "–°—É–º–º–∞", "–°—Ä–æ–∫ –ø–æ—Å—Ç–∞–≤–∫–∏", "–ü–æ—Å—Ç–∞–≤—â–∏–∫", "–°—Ç–∞—Ç—É—Å", "–ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º–∞—è –¥–∞—Ç–∞ –æ–ø–ª–∞—Ç—ã",
    ].map(c => { return heads.indexOf(c); }).filter(c => (c >= 0));
    vls.forEach(v => {
      if (item.–¢–±.–ò—Å–∫–ª—é—á–∏—Ç—å–°—Ç—Ä–æ–∫–∏.includes(v[0])) { return; }
      if (!v[col_name]) { return; }
      let obj = new Object();
      col_list.forEach(col => {
        obj[heads[col]] = v[col];

      });
      obj["–°–≤–æ–¥–∫–∞"] = {
        –ü–æ—Å—Ç–∞–≤–∫–∏: (() => {
          // if (getContext().timeConstruct.getHours() % 2 > 0) { return; }
          return map–°–≤–æ–¥–Ω–∞—è.get(obj["‚Ññ"])
        })(),  // —Ç—É—Ç –ø—Ä–æ–±–ª–µ–º–∞

      };
      // retArr.push(heads);
      retArr.push(obj);
    });

    // return retArr;
    return {
      —Ç–µ–ª–æ: retArr,
      —à–∞–ø–∫–∞: heads.filter((h, i, arr) => { return col_list.includes(i); }),
    }
  }
  /** @private  */
  getValuesFrom–û–ø–ª–∞—Ç—ã(item) {

    let rowBodyFirst = 3;
    let retArr = new Array();
    let sheet = this.context.getSheetByName(this.context.settings.sheetName_–û–ø–ª–∞—Ç—ã);
    // let heads = sheet.getRange(2, 1, 1, sheet.getLastColumn()).getValues()[0];
    let heads = sheet.getRange(2, 1, 1, nr("W")).getValues()[0];
    // heads = ["row"].concat(heads).map(h => fl_str(h));
    heads = ["row"].concat(heads).map(h => `${h}`.trim());
    heads = heads.map(v => {
      return `${v}`.replace("\n", " ").replace(/ +/g, ' ').trim();   // /[\n\r]/g,' '
    });
    let vls = sheet.getRange(rowBodyFirst, 1, item.–¢–±.countProd, sheet.getLastColumn()).getValues();
    vls = vls.map((v, i, arr) => { return [i + rowBodyFirst].concat(v) });
    let col_name = nr("B");

    // let col_list = ["‚Ññ", "–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞", "–Æ—Ä –ª–∏—Ü–æ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞", "‚Ññ —Å—á–µ—Ç–∞", "–°—Ç–∞—Ç—É—Å", "–ü–ª–∞—Ç–µ–ª—å—â–∏–∫", "–î–∞—Ç–∞ –æ–ø–ª–∞—Ç—ã", "% –æ–ø–ª–∞—Ç—ã",].map(c => { return heads.indexOf(c); }).filter(c => (c >= 0));
    let col_names = ["‚Ññ", "–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞", "–Æ—Ä –ª–∏—Ü–æ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞", "‚Ññ —Å—á–µ—Ç–∞", "–°—Ç–∞—Ç—É—Å", "–ü–ª–∞—Ç–µ–ª—å—â–∏–∫", "–î–∞—Ç–∞ –æ–ø–ª–∞—Ç—ã", "% –æ–ø–ª–∞—Ç—ã", "–°—Ç–∞—Ç—É—Å –æ–ø–ª–∞—Ç—ã"];

    let col_list = new Array();
    let col_set = new Set();

    heads = heads.map((h, i, arr) => {
      if (!col_names.includes(h)) { return h; }
      col_list.push(i);

      if (col_set.has(h)) {
        h = `${h}_${nc(i)}`;
      }
      col_set.add(h);
      return h;
    });


    vls.forEach(v => {
      if (!v[col_name]) { return; }
      let obj = new Object();
      col_list.forEach(col => {
        obj[heads[col]] = v[col];
        if (heads[col] == "–î–∞—Ç–∞ –æ–ø–ª–∞—Ç—ã") {

          if (v[col] instanceof Date) {
            obj["–î–∞—Ç–∞ –æ–ø–ª–∞—Ç—ã"] = `${Utilities.formatDate(v[col], "Europe/Moscow", "dd.MM.YYYY")}`;
            // obj["–î–∞—Ç–∞ –æ–ø–ª–∞—Ç—ãüìÜ"] = `üìÜ\n${Utilities.formatDate(v[col], "Europe/Moscow", "dd.MM.YYYY")}`;
          }

        }

      });
      retArr.push(obj);
    });
    return {
      —Ç–µ–ª–æ: retArr,
      —à–∞–ø–∫–∞: heads.filter((h, i, arr) => { return col_list.includes(i); }),
      —à–∞–ø–∫–∞_–≤—Å—è: heads,
    }

  }
  /** @private  */
  getValuesFrom–ù–∞—Å—Ç—Ä–æ–π–∫–∏_–ø–∏—Å–µ–º(item) {
    let retObj = new Object();
    let sheet_–ù–∞—Å—Ç—Ä–æ–π–∫–∏_–ø–∏—Å–µ–º = this.context.getSheetByName(getSettings().sheetName_–ù–∞—Å—Ç—Ä–æ–π–∫–∏_–ø–∏—Å–µ–º);
    let vls_AJ1_AK = sheet_–ù–∞—Å—Ç—Ä–æ–π–∫–∏_–ø–∏—Å–µ–º.getRange("AJ1:AK").getValues();
    for (let i = 0; i < vls_AJ1_AK.length; i++) {
      let fild_name = vls_AJ1_AK[i][0];
      let fild_value = vls_AJ1_AK[i][1];
      if (!fild_name) { continue; }
      retObj[fild_name] = fild_value;
    }
    retObj["–ß–∏—Å–ª–æ —Ç–æ–≤–∞—Ä–æ–≤"] = undefined;
    retObj["–¢–∞–±–ª–∏—Ü–∞ –≤ 1 —Å—Ç—Ä–æ–∫–µ —á–∞—Å—Ç—å 1"] = undefined;
    retObj["–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–π –∏ –Ω–æ–º–µ—Ä–∞ —Å—á–µ—Ç–æ–≤"] = undefined;
    // —Ç–∞–º–ø—É—Å—Ç–æ

    retObj["—Ç–∞–º–ø—É—Å—Ç–æ"] = "&";
    // retObj["—Ç–∞–º–ø—É—Å—Ç–æ"] = "&" + (() => { try { return sheet_–ù–∞—Å—Ç—Ä–æ–π–∫–∏_–ø–∏—Å–µ–º.getRange("AR1:AT6").getValues().flat(2).join("") } catch (err) { return mrErrToString(err); } })();
    // retObj["—Ç–∞–º–ø—É—Å—Ç–æ"] = getContext().getSheetList7().—Ç–∞–º–ø—É—Å—Ç–æ();
    // retObj["—Ç–∞–º–ø—É—Å—Ç–æ"] = getContext().getSheetPay().—Ç–∞–º–ø—É—Å—Ç–æ(1 / 24 / 60 * 4.9);

    return retObj;
  }

  /** @private  */
  getListOf–ò—Å–∫–ª—é—á–∏—Ç—å–°—Ç—Ä–æ–∫–∏–ò–∑–¢–∞–±–ª–∏—Ü—ã–õ–æ–≥–∏—Å—Ç–∞(item) {
    let str_key = fl_str("–ò—Å–∫–ª—é—á–∏—Ç—å —Å—Ç—Ä–æ–∫–∏ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã –ª–æ–≥–∏—Å—Ç–∞");
    let ret_arr = new Array();

    let sheet_–ù–∞—Å—Ç—Ä–æ–π–∫–∏_–ø–∏—Å–µ–º = this.context.getSheetByName(getSettings().sheetName_–ù–∞—Å—Ç—Ä–æ–π–∫–∏_–ø–∏—Å–µ–º);
    let vls_AJ1_AK = sheet_–ù–∞—Å—Ç—Ä–æ–π–∫–∏_–ø–∏—Å–µ–º.getRange("AJ1:AK").getValues();
    for (let i = 0; i < vls_AJ1_AK.length; i++) {
      let fild_name = vls_AJ1_AK[i][0];
      let fild_value = vls_AJ1_AK[i][1];
      if (!fild_name) { continue; }
      if (fl_str(fild_name) != str_key) { continue; }
      ret_arr = ret_arr.concat(
        `${fild_value}`.split(" ").map(v => Number.parseInt(v))
        // .filter(v => {
        //   if (!Number.isInteger(v)) { false; }
        //   if (!Number.isFinite(v)) { false; }
        //   if (!Number.isSafeInteger(v)) { false; }
        //   true;
        // })
      );
      break;
    }
    return ret_arr;
  }

  getValuesFrom–£–ü–î(item) {
    let retArr = new Array();
    try {
      let context = this.getContext–¢–∞–±–ª–∏—Ü–∞–û–ø–ª–∞—Ç–í–Ω–µ—à–Ω—è—è();
      // Logger.log(` getValuesFrom–£–ü–î contest =${context}`);
      if (context) {
        // Logger.log(` getValuesFrom–£–ü–î contest =${context}`);
        let MrClassSheetModel = MrLib_Midlle.getMrClassSheetModel();
        let sheetModel–£–ü–î = new MrClassSheetModel("–°–≤–æ–¥–Ω–∞—è –ø–æ –£–ü–î", context);
        /** @type {Map} */
        let map = sheetModel–£–ü–î.getMap();
        retArr = [...map.values()];
      }
    } catch (err) { mrErrToString(err); }
    return retArr;
  }



  getValuesFrom–î–û–ö(item) {
    let retArr = new Array();
    try {
      let context = this.getContext–¢–∞–±–ª–∏—Ü–∞–û–ø–ª–∞—Ç–í–Ω–µ—à–Ω—è—è();
      if (context) {
        let MrClassSheetModel = MrLib_Midlle.getMrClassSheetModel();
        let sheetModel–£–ü–î = new MrClassSheetModel("–°–≤–æ–¥–Ω–∞—è –ø–æ –î–æ–≥–æ–≤–æ—Ä–∞–º", context);
        /** @type {Map} */
        let map = sheetModel–£–ü–î.getMap();
        retArr = [...map.values()];
      }
    } catch (err) { mrErrToString(err); }
    // –°–≤–æ–¥–Ω–∞—è –ø–æ –î–æ–≥–æ–≤–æ—Ä–∞–º
    return retArr;
  }

  getValuesFrom–°–≤–æ–¥–Ω–∞—è–ü–æ–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–µ(item) {
    let retArr = new Array();
    try {
      let context = this.getContext–¢–∞–±–ª–∏—Ü–∞–û–ø–ª–∞—Ç–í–Ω–µ—à–Ω—è—è();
      if (context) {
        let MrClassSheetModel = MrLib_Midlle.getMrClassSheetModel();
        let sheetModel–°–≤–æ–¥–Ω–∞—è = new MrClassSheetModel("–°–≤–æ–¥–Ω–∞—è –ø–æ –ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–µ", context);
        /** @type {Map} */
        let map = sheetModel–°–≤–æ–¥–Ω–∞—è.getMap();
        retArr = [...map.values()];
      }
    } catch (err) { mrErrToString(err); }
    // –°–≤–æ–¥–Ω–∞—è –ø–æ –ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–µ
    return retArr;
  }

  getUrls(item) {
    return this.context.getUrls();
  }




  get–°–≤–æ–¥–∫–∞–ü—Ä–æ–µ–∫—Ç–∞() {
    let –ü–ª–∞—Ç–µ–ª—å—â–∏–∫ = getContext().getSheetPay().get–ü–ª–∞—Ç–µ–ª—å—â–∏–∫–∏().join("\n");
    let –ü–æ—Å—Ä–µ–¥–Ω–∏–∫ = getContext().getSheetPay().get–ü–æ—Å—Ä–µ–¥–Ω–∏–∫();

    let –°–≤–æ–¥–Ω–∞—è–ü—Ä–æ—á–µ–µ = new Object();
    // –°–≤–æ–¥–Ω–∞—è–ü—Ä–æ—á–µ–µ["üß©"] = "üß©";
    –°–≤–æ–¥–Ω–∞—è–ü—Ä–æ—á–µ–µ = getContext().getSheetPay().get–°–≤–æ–¥–Ω–∞—è–ü—Ä–æ—á–µ–µ(–°–≤–æ–¥–Ω–∞—è–ü—Ä–æ—á–µ–µ);
    let –°–≤–æ–¥–∫–∞–ü—Ä–æ–µ–∫—Ç–∞ = {
      "üß©": "üß©",
      –ü–ª–∞—Ç–µ–ª—å—â–∏–∫,
      –ü–æ—Å—Ä–µ–¥–Ω–∏–∫,
      –°–≤–æ–¥–Ω–∞—è–ü—Ä–æ—á–µ–µ,
    }
    return –°–≤–æ–¥–∫–∞–ü—Ä–æ–µ–∫—Ç–∞;
  }


  getExportValues() {
    this.item.ver = "1";
    this.item.key = this.context.getSpreadSheet().getUrl();

    this.item.info = {
      // key: SpreadsheetApp.getActive().getUrl(),
      email: Session.getEffectiveUser().getEmail(),
      // date: new Date(),
      date: timeConstruct,
      // name: SpreadsheetApp.getActive().getName(),
    }

    this.item.–¢–± = new Object();


    this.item.–¢–±.name = this.context.getSpreadSheet().getName();
    this.item.–¢–±.rowBodyLast–°–±–æ—Ä_–ö–ü = this.findRowBodyLast(this.context.settings.sheetName_–õ–∏—Å—Ç_7);
    this.item.–¢–±.countProd = this.item.–¢–±.rowBodyLast–°–±–æ—Ä_–ö–ü - 2 + 1;
    this.item.–¢–±.–ò—Å–∫–ª—é—á–∏—Ç—å–°—Ç—Ä–æ–∫–∏ = this.tryAddErr(this, this.getListOf–ò—Å–∫–ª—é—á–∏—Ç—å–°—Ç—Ä–æ–∫–∏–ò–∑–¢–∞–±–ª–∏—Ü—ã–õ–æ–≥–∏—Å—Ç–∞.name, this.item);
    this.item.–¢–±.–ù–∞—Å—Ç—Ä–æ–π–∫–∏_–ø–∏—Å–µ–º = this.getValuesFrom–ù–∞—Å—Ç—Ä–æ–π–∫–∏_–ø–∏—Å–µ–º(this.item);
    this.item.–¢–±["üë®‚Äçüë©‚Äçüëß‚Äçüë¶"] = "üë®‚Äçüë©‚Äçüëß‚Äçüë¶";
    this.item.–¢–±.–í—ã–±–æ—Ä_–ü–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ = this.getValuesFrom–í—ã–±–æ—Ä_–ü–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤(this.item);
    this.item.–¢–±["üíé"] = "üíé";
    this.item.–¢–±.–û–ø–ª–∞—Ç—ã = this.tryAddErr(this, this.getValuesFrom–û–ø–ª–∞—Ç—ã.name, this.item);
    this.item.–¢–±["üßæ"] = "üßæ";
    this.item.–¢–±.–£–ü–î = this.tryAddErr(this, this.getValuesFrom–£–ü–î.name, this.item);
    this.item.–¢–±.–î–û–ö = this.tryAddErr(this, this.getValuesFrom–î–û–ö.name, this.item);
    this.item.–¢–±.URLS = this.tryAddErr(this, this.getUrls.name, this.item);
    this.item.–¢–±.–°–≤–æ–¥–∫–∞–ü—Ä–æ–µ–∫—Ç–∞ = this.tryAddErr(this, this.get–°–≤–æ–¥–∫–∞–ü—Ä–æ–µ–∫—Ç–∞.name, this.item);
    // this.item.–¢–±["–ü–æ—Å—Ç–∞–≤–æ–∫–∏–ü–æ–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–µ"] = this.tryAddErr(this, this.getValuesFrom–°–≤–æ–¥–Ω–∞—è–ü–æ—Å—Ç–∞–≤–æ–∫–ü–æ–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–µ.name, this.item);
    // Logger.log("getExportValues " + JSON.stringify(this.item));
    return this.item;
  }
  /** @private  */
  tryAddErr(tt, colable, item) {
    try {
      // Logger.log(colable)
      return tt[colable](item);
    } catch (err) {
      item.errors = [].concat(mrErrToString(err), item.errors);
      mrErrToString(err);
    }
  }
}



//

// ----------------------------------------------



function triggerExportValuesToMidlle() {
  // return;
  // Logger.log(`triggerExportValuesToMidlle  S`);
  try { new MrClassExportProject(getContext(), new Object()).triggerExportValuesToMidlle(); } catch (err) { mrErrToString(err); }
  // try { new MrClassExportProject(getContext(), new Object()).triggerExportValuesToMidlle(); } catch (err) { mrErrToString(err); }
  // MrLib_Midlle.updateItems(this.sheetName_–ü—Ä–æ–µ–∫—Ç—ã, [this.getExportValues()]);
  Logger.log(`triggerExportValuesToMidlle  F`);
}


