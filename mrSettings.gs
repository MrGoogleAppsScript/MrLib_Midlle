
class MrSettings {
  constructor() {


    this.folderId = "1????????????????????????????????"
    this.cacheName = "Midlle";


    this.sheetNames = {
      Настройки: "НАСТРОЙКИ",
      Проекты: "Проекты",
      Настройки_писем: "Настройки писем",

      Паспорт_проекта: "0-Паспорт проекта",

      Сбор_КП: "1-1 Сбор КП",//
      Группы_товаров: "1-2 Запросы по товарным группам",//
      Актуальный_Сбор_КП: "1-1-1 Актуальный Сбор КП из внешней",// 
      Вопросы: "2 Вопросы от Поставщиков",//
      Подготовка_КП: "4 Подготовка КП",//
      Доставка: "3-1 Расчет стоимости доставки",//
      Экспертиза: "3-2 Экспертиза предложений",//
      Выбор_поставщиков: "3-3 Выбор поставщиков",//
      Закупка_товара: "5 Закупка товара",//
      Закупка_товара_Внешняя: "5 Закупка товара Внешняя",//
      Оплаты: "6 Оплаты",//
      Оплаты_Внешняя: "6 Оплаты Внешняя",//  
      Отзывы_о_поставщиках: "Отзывы о поставщиках",//
      Товары: "Товары",//
      Словари: "Словари",
      Файлы: "Файлы",
      Проекты_в_Исполнение: "Проекты в Исполнение",


      УПД: "Отгрузочные документы",
      ДОК: "Договора",

      Звонки: "1-3 Звонки",
      Отправленные: "Отправленные",

      Экспорт_в_битрикс: "Экспорт в битрикс",
      Прием_данных_из_Таблиц: "Прием данных из Таблиц",
      Прием_данных_из_Таблиц: {
        Прием: "Прием данных из Таблиц",
        Влияет_на_стадию: "Прием_данных_из_Таблиц_Влияет_на_стадию",
        Не_влияет_на_стадию: "Прием_данных_из_Таблиц_не_влияет_на_стадию",
      },


      Вопросы: "2-1 Вопросы от Поставщиков",
      Проблемы: "2-2 Проблемы по проекту",
      ОтчетыПроектов: "ОтчетыПроектов",

      СводнаяПоДоговорам: "Сводная по Договорам",
      СводнаяПоУПД: "Сводная по УПД",
      Договора: "Договора",
      ОтгрузочныеДокументы: "Отгрузочные документы",

    }
    this.urls = {


      
      Проекты: "https://docs.google.com/spreadsheets/d/1???????????????????????????????????????????/",
      
      ПромежуткиЛогиста: "https://docs.google.com/spreadsheets/d/1???????????????????????????????????????????/",
      ПромежуткиРеестр: "https://docs.google.com/spreadsheets/d/1???????????????????????????????????????????/",

      РеестрК: "https://docs.google.com/spreadsheets/d/1???????????????????????????????????????????/",
      РеестрЮ: "https://docs.google.com/spreadsheets/d/1???????????????????????????????????????????/",


      ОтслеживаниеПоставкиАнтонЛизякин: "https://docs.google.com/spreadsheets/d/1???????????????????????????????????????????/",
      ОтслеживаниеПоставкиЮлии: "https://docs.google.com/spreadsheets/d/1???????????????????????????????????????????/",

      // Мусор_ОтслеживаниеПоставкиАнтонЛизякин: "https://docs.google.com/spreadsheets/d/1???????????????????????????????????????????/",
      // МусорРеестрК: "https://docs.google.com/spreadsheets/d/1???????????????????????????????????????????/",
      Письма: "https://docs.google.com/spreadsheets/d/1???????????????????????????????????????????/edit",
      ЗвонкиКоординатора: "https://docs.google.com/spreadsheets/d/1???????????????????????????????????????????/edit",
      ВопросыПроблемыПроектов: "https://docs.google.com/spreadsheets/d/1???????????????????????????????????????????/edit",
      ШаблонВнешнейОплаты: "https://docs.google.com/spreadsheets/d/1???????????????????????????????????????????/",
      ЧистаяВсеПочты: "https://docs.google.com/spreadsheets/d/1???????????????????????????????????????????/edit",

      Документы: "https://docs.google.com/spreadsheets/d/1???????????????????????????????????????????/edit",

    }


    this.taskExecutorsMap = new Map();
    this.taskExecutorsMap.set(ExeTask_ExportValuesFromProjects.name, ExeTask_ExportValuesFromProjects);
    this.taskExecutorsMap.set(ExeTask_ExportReestr.name, ExeTask_ExportReestr);
    this.taskExecutorsMap.set(ExeTask_SyncLogist.name, ExeTask_SyncLogist);
    this.taskExecutorsMap.set(ExeTask_SyncReestr.name, ExeTask_SyncReestr);
    this.taskExecutorsMap.set(ExeTask_SyncCopyRange.name, ExeTask_SyncCopyRange);
    this.taskExecutorsMap.set(ExeTask_ExportPayments.name, ExeTask_ExportPayments);
    this.taskExecutorsMap.set(ExeTask_JoinProgectInfo.name, ExeTask_JoinProgectInfo);
    this.taskExecutorsMap.set(ExeTask_SyncОтслеживанияДляЮли.name, ExeTask_SyncОтслеживанияДляЮли);
    this.taskExecutorsMap.set(ExeTask_SyncЗвонки.name, ExeTask_SyncЗвонки);
    this.taskExecutorsMap.set(ExeTask_SyncЭкспортВБитрикс.name, ExeTask_SyncЭкспортВБитрикс);
    this.taskExecutorsMap.set(ExeTask_SyncПроблемы.name, ExeTask_SyncПроблемы);
    this.taskExecutorsMap.set(ExeTask_SyncВопросы.name, ExeTask_SyncВопросы);
    this.taskExecutorsMap.set(ExeTask_SyncОплатыВнешней.name, ExeTask_SyncОплатыВнешней);
    this.taskExecutorsMap.set(ExeTask_SyncПроекта.name, ExeTask_SyncПроекта);
    this.taskExecutorsMap.set(ExeTask_SyncFilds.name, ExeTask_SyncFilds);




  }



  init() {
    // this.mapМагазины = new Map();
    // this.Магазины.forEach(/** @param {InfoМагазина} */(v) => { this.mapМагазины.set(v.name, v) });

  }

  /** @param {object} newSettings */
  setSettings(newSettings) {
    if (typeof newSettings != "object") { return; }
    for (let key in newSettings) {
      this[key] = newSettings[key];
    }
    this.init();
  }

  getSheetTemplateByName(sheetName) {
    let url = "https://docs.google.com/spreadsheets/d/1???????????????????????????????????????????/edit";
    let tms = {}
    tms["Отправленные письма"] = { url, sheetName: "Отправленные письма", }
    tms["Отправленные запросы"] = { url, sheetName: "Отправленные запросы", }
    tms["Расс Зак"] = { url, sheetName: "Расс Зак", }
    tms["Расс Прод"] = { url, sheetName: "Расс Прод", }
    tms["7-2 УПД"] = { url, sheetName: "7-2 УПД", }
    tms["7-2 Договора"] = { url, sheetName: "7-2 Договора", }
    tms["7-2 Логистика"] = { url, sheetName: "7-2 Логистика", }
    tms["7-2 Номенклатуры"] = { url, sheetName: "7-2 Номенклатуры", }
    tms["7-2 Оплаты"] = { url, sheetName: "7-2 Оплаты", }
    tms["ОтчетыПроектов"] = { url, sheetName: "ОтчетыПроектов", };
    return tms[sheetName];
  }

}

let mrSettings = undefined;

/** @returns {MrSettings} */
function getSettings() {
  if (!mrSettings) {
    mrSettings = new MrSettings();
    mrSettings.init()
  }
  return mrSettings;
}

function setSettings(newSettings) {
  getSettings().setSettings(newSettings);
}




class MrClassSettingsSheet extends MrClassSheetModel {
  constructor(sheetName, context) {
    super(sheetName, context);
  }
}



